{"ast":null,"code":"var _jsxFileName = \"/Users/mhd.sad22/udemy/JS-course/infinite-scroll/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport 'tachyons';\nimport Images from './Images';\nimport Loading from './Loading';\nconst apiKey = 'gZltUiUKrujp2xyoVwrqyrnolWRivEF1UvOnHqg4Dz8';\nconst count = 10;\nconst url = `https://api.unsplash.com/photos/random/?client_id=${apiKey}&count=${count}`;\n\nasync function getPhotos() {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      photosArray: data\n    });\n    console.log(this.state.photosArray);\n  } catch (error) {\n    console.log(\"error..something wrong with fetching!..\");\n  }\n}\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      photosArray: []\n    };\n  }\n\n  componentDidMount() {\n    getPhotos();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \" \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, \"Infinite Scroll Images\"), this.state.loading ? /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }) : /*#__PURE__*/React.createElement(Images, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mhd.sad22/udemy/JS-course/infinite-scroll/src/App.js"],"names":["React","Images","Loading","apiKey","count","url","getPhotos","response","fetch","data","json","setState","photosArray","console","log","state","error","App","Component","constructor","loading","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAO,UAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,MAAM,GAAE,6CAAd;AACA,MAAMC,KAAK,GAAE,EAAb;AACA,MAAMC,GAAG,GAAE,qDAAoDF,MAAO,UAASC,KAAM,EAArF;;AACA,eAAeE,SAAf,GAA0B;AACxB,MAAG;AACD,UAAMC,QAAQ,GAAE,MAAMC,KAAK,CAACH,GAAD,CAA3B;AACA,UAAMI,IAAI,GAAE,MAAMF,QAAQ,CAACG,IAAT,EAAlB;AACA,SAAKC,QAAL,CAAc;AAACC,MAAAA,WAAW,EAACH;AAAb,KAAd;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWH,WAAvB;AAED,GAND,CAMC,OAAMI,KAAN,EAAY;AACXH,IAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACD;AACF;;AAED,MAAMG,GAAN,SAAkBjB,KAAK,CAACkB,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,GAAE;AACX;AACA,SAAKJ,KAAL,GAAW;AACTK,MAAAA,OAAO,EAAC,KADC;AAETR,MAAAA,WAAW,EAAC;AAFH,KAAX;AAID;;AAEDS,EAAAA,iBAAiB,GAAE;AACjBf,IAAAA,SAAS;AACV;;AACDgB,EAAAA,MAAM,GAAE;AACR,wBAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEI,KAAKP,KAAL,CAAWK,OAAX,gBACF,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADE,gBAEF,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAFF;AAUD;;AAxBiC;;AA0BlC,eAAeH,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport 'tachyons';\nimport Images from './Images';\nimport Loading from './Loading';\n\nconst apiKey ='gZltUiUKrujp2xyoVwrqyrnolWRivEF1UvOnHqg4Dz8';\nconst count =10;\nconst url=`https://api.unsplash.com/photos/random/?client_id=${apiKey}&count=${count}`;\nasync function getPhotos(){\n  try{\n    const response= await fetch(url);\n    const data= await response.json();\n    this.setState({photosArray:data});\n    console.log(this.state.photosArray);\n\n  }catch(error){\n    console.log(\"error..something wrong with fetching!..\");\n  }\n}\n\nclass App extends React.Component {\n\n  constructor(){\n    super();\n    this.state={\n      loading:false,\n      photosArray:[]\n    }\n  }\n\n  componentDidMount(){\n    getPhotos();\n  }\n  render(){\n  return (\n\n    <div className=\"App\">\n      <h1 className=\" \">Infinite Scroll Images</h1>\n      { this.state.loading?\n      <Loading/> :\n      <Images/>\n      }\n    </div>\n  );\n}\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}