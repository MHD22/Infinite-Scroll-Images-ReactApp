{"ast":null,"code":"var _jsxFileName = \"/Users/mhd.sad22/udemy/JS-course/infinite-scroll/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport 'tachyons';\nimport Images from './Images';\nimport Loading from './Loading';\nconst apiKey = 'gZltUiUKrujp2xyoVwrqyrnolWRivEF1UvOnHqg4Dz8';\nconst count = 10;\nconst url = `https://api.unsplash.com/photos/random/?client_id=${apiKey}&count=${count}`;\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getPhotos = async function () {\n      try {\n        const response = await fetch(url);\n        let data = await response.json();\n        let imagesArray = await data.map(x => {\n          return /*#__PURE__*/React.createElement(\"a\", {\n            key: x.id,\n            href: x.links.html,\n            target: '_blank',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 9\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: x.urls.regular,\n            alt: x.alt_description,\n            title: x.alt_description,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }\n          }));\n        });\n        this.setState({\n          photosArray: this.state.photosArray.concat(imagesArray)\n        });\n      } catch (error) {\n        console.log(\"error..something wrong with fetching!..\");\n      }\n    };\n\n    this.state = {\n      loading: false,\n      photosArray: [],\n      ready: true\n    };\n  }\n\n  componentDidMount() {\n    this.getPhotos();\n    window.addEventListener('scroll', () => {\n      if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 1000 && this.state.ready) {\n        this.getPhotos();\n        console.log(\"loaadingggg..\");\n        this.setState({\n          ready: false\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \" \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, \"Infinite Scroll Images\"), this.state.loading ? /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }) : /*#__PURE__*/React.createElement(Images, {\n      array: this.state.photosArray,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mhd.sad22/udemy/JS-course/infinite-scroll/src/App.js"],"names":["React","Images","Loading","apiKey","count","url","App","Component","constructor","getPhotos","response","fetch","data","json","imagesArray","map","x","id","links","html","urls","regular","alt_description","setState","photosArray","state","concat","error","console","log","loading","ready","componentDidMount","window","addEventListener","innerHeight","scrollY","document","body","offsetHeight","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAO,UAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,MAAM,GAAE,6CAAd;AACA,MAAMC,KAAK,GAAE,EAAb;AACA,MAAMC,GAAG,GAAE,qDAAoDF,MAAO,UAASC,KAAM,EAArF;;AACA,MAAME,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,GAAE;AACX;;AADW,SASbC,SATa,GASF,kBAAgB;AACzB,UAAG;AACD,cAAMC,QAAQ,GAAE,MAAMC,KAAK,CAACN,GAAD,CAA3B;AACA,YAAIO,IAAI,GAAE,MAAMF,QAAQ,CAACG,IAAT,EAAhB;AACA,YAAIC,WAAW,GAAG,MAAMF,IAAI,CAACG,GAAL,CAAWC,CAAD,IAAO;AACvC,8BACA;AACI,YAAA,GAAG,EAAEA,CAAC,CAACC,EADX;AAEI,YAAA,IAAI,EAAED,CAAC,CAACE,KAAF,CAAQC,IAFlB;AAGI,YAAA,MAAM,EAAE,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAIQ;AACK,YAAA,GAAG,EAAEH,CAAC,CAACI,IAAF,CAAOC,OADjB;AAEI,YAAA,GAAG,EAAEL,CAAC,CAACM,eAFX;AAGI,YAAA,KAAK,EAAEN,CAAC,CAACM,eAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJR,CADA;AAUH,SAXyB,CAAxB;AAaA,aAAKC,QAAL,CAAc;AAACC,UAAAA,WAAW,EAAG,KAAKC,KAAL,CAAWD,WAAX,CAAuBE,MAAvB,CAA8BZ,WAA9B;AAAf,SAAd;AAGD,OAnBD,CAoBE,OAAMa,KAAN,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACD;AACF,KAjCY;;AAEX,SAAKJ,KAAL,GAAW;AACTK,MAAAA,OAAO,EAAC,KADC;AAETN,MAAAA,WAAW,EAAC,EAFH;AAGTO,MAAAA,KAAK,EAAC;AAHG,KAAX;AAKD;;AA4BDC,EAAAA,iBAAiB,GAAE;AACjB,SAAKvB,SAAL;AACAwB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAiC,MAAI;AACnC,UAAGD,MAAM,CAACE,WAAP,GAAqBF,MAAM,CAACG,OAA5B,IAAuCC,QAAQ,CAACC,IAAT,CAAcC,YAAd,GAA6B,IAApE,IAA4E,KAAKd,KAAL,CAAWM,KAA1F,EACA;AAEE,aAAKtB,SAAL;AACAmB,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,aAAKN,QAAL,CAAc;AAACQ,UAAAA,KAAK,EAAC;AAAP,SAAd;AAED;AAEF,KAVD;AAWD;;AACDS,EAAAA,MAAM,GAAE;AACR,wBAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEI,KAAKf,KAAL,CAAWK,OAAX,gBACF,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADE,gBAEF,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWD,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAFF;AAUD;;AA9DiC;;AAgElC,eAAelB,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport 'tachyons';\nimport Images from './Images';\nimport Loading from './Loading';\n\nconst apiKey ='gZltUiUKrujp2xyoVwrqyrnolWRivEF1UvOnHqg4Dz8';\nconst count =10;\nconst url=`https://api.unsplash.com/photos/random/?client_id=${apiKey}&count=${count}`;\nclass App extends React.Component {\n\n  constructor(){\n    super();\n    this.state={\n      loading:false,\n      photosArray:[],\n      ready:true,\n    }\n  }\n\n  getPhotos =async function(){\n    try{\n      const response= await fetch(url);\n      let data= await response.json();\n      let imagesArray=  await data.map( (x) => {\n        return(\n        <a \n            key={x.id} \n            href={x.links.html} \n            target={'_blank'} >\n                <img \n                     src={x.urls.regular} \n                    alt={x.alt_description} \n                    title={x.alt_description}  />\n         </a>)\n    });\n      \n      this.setState({photosArray : this.state.photosArray.concat(imagesArray)});\n      \n      \n    }\n      catch(error){\n      console.log(\"error..something wrong with fetching!..\");\n    }\n  }\n\n  componentDidMount(){\n    this.getPhotos();\n    window.addEventListener('scroll',()=>{\n      if(window.innerHeight + window.scrollY >= document.body.offsetHeight - 1000 && this.state.ready)\n      {\n        \n        this.getPhotos();\n        console.log(\"loaadingggg..\")\n        this.setState({ready:false});\n        \n      }\n    \n    });\n  }\n  render(){\n  return (\n\n    <div className=\"App\">\n      <h1 className=\" \">Infinite Scroll Images</h1>\n      { this.state.loading?\n      <Loading/> :\n      <Images array={this.state.photosArray}/>\n      }\n    </div>\n  );\n}\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}